import guardianRepository from '../repositories/guardianRepository';

class GuardianController {

    async saveGuardian(req, res) {
        try {
            let guardian = {};
            // Get values from request body
            guardian.type = req.body.type;
            guardian.fullname = req.body.fullname;
            guardian.gender = req.body.gender;
            guardian.contact_no = req.body.contact_no;
            guardian.email = req.body.email;
            guardian.users_id = req.body.user_id;
            guardian.student_id = req.body.student_id;

            // Generate guardian ID
            //TODO: call the helper and generate guardian id
            guardian.guardianNo = 'autogenerated';

            let newGuardian = await guardianRepository.create(guardian);

            res.status(200).send({
                'success': true,
                'data': newGuardian,
                'msg': "Successfully Saved"
            });
        } catch (e) {
            res.status(200).send({
                'success': false,
                'msg': e.message
            });
        }
    }

    async getAllGuardians(req, res) {
        try {
            let guardians = await guardianRepository.findAll();
            res.status(200).send({
                'success': true,
                'data': guardians
            });
        } catch (e) {
            res.status(200).send({
                'success': false,
                'msg': e.message
            });
        }
    }

    async getGuardianById(req, res) {
        try {
            let guardianId = req.params.id;
            let guardian = await guardianRepository.findById(guardianId);
            res.status(200).send({
                'success': true,
                'data': guardian
            });
        } catch (e) {
            res.status(200).send({
                'success': false,
                'msg': e.message
            });
        }
    }

    async updateGuardian(req, res) {
        try {
            let guardian = {};

            let guardianId = req.params.id;
            guardian.type = req.body.type;
            guardian.fullname = req.body.fullname;
            guardian.gender = req.body.gender;
            guardian.contact_no = req.body.contact_no;
            guardian.email = req.body.email;

            let isUpdated = await guardianRepository.update(guardianId, guardian)

            if (isUpdated) {
                res.status(200).send({
                    'success': true,
                    'msg': "Successfully Updated"
                });
            }
        } catch (e) {
            res.status(200).send({
                'success': false,
                'msg': e.message
            });
        }
    }

    async deleteGuardian(req, res) {
        try {
            const guardianId = req.params.id
            let isDeleted = await guardianRepository.destroy(guardianId)
            if (isDeleted) {
                res.status(200).send({
                    'success': true,
                    'msg': "Successfully Deleted"
                });
            }
        } catch (e) {
            res.status(200).send({
                'success': false,
                'msg': e.message
            });
        }
    }

}

const guardianController = new GuardianController();
export default guardianController;
